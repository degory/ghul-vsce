{
  "name": "ghul-vsce",
  "displayName": "ghÅ«l language server",
  "description": "ghul language server",
  "version": "0.6.10-alpha.1",
  "author": "degory",
  "license": "GPL-3.0",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/degory/ghul-lsp"
  },
  "dependencies": {
    "@types/file-url": "^2.0.0",
    "@types/recursive-readdir": "^2.2.0",
    "bindings": "^1.3.0",
    "glob": "^7.2.0",
    "minimatch": "^9.0.3",
    "recursive-readdir": "^2.2.1",
    "throttle-debounce": "^3.0.1",
    "typescript-definition-of-eventemitter-with-keyof": "git+https://github.com/kimamula/TypeScript-definition-of-EventEmitter-with-keyof.git",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.11",
    "vscode-uri": "^3.0.3",
    "xml2js": "^0.4.23"
  },
  "scripts": {
    "installServer": "installServerIntoExtension ../client ./package.json ./tsconfig.json",
    "compile": "installServerIntoExtension ../client ./package.json ./tsconfig.json && tsc -p .",
    "watch": "installServerIntoExtension ../client ./package.json ./tsconfig.json && tsc -w -p .",
    "webpack": "webpack --mode production",
    "test": "jest",
    "test:watch": "jest --watch"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/jest": "^29.5.11",
    "@types/node": "^14.0.11",
    "@types/throttle-debounce": "^2.1.0",
    "@types/xml2js": "^0.4.9",
    "jest": "^29.7.0",
    "merge-options": "^3.0.3",
    "ts-auto-mock": "^3.7.2",
    "ts-jest": "^29.1.1",
    "ts-loader": "^8.0.11",
    "ts-patch": "^3.1.2",
    "typescript": "^5.3.3",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.2.0"
  },
  "jest": {
    "roots": [
      "<rootDir>/tests"
    ],
    "testEnvironment": "node",
    "testMatch": [
      "**/*.test.ts"
    ],
    "transform": {
      "^.+\\.ts$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.jest.json"
        }
      ]
    },
    "moduleFileExtensions": [
      "ts",
      "js",
      "json"
    ],
    "collectCoverage": true,
    "coverageReporters": [
      "lcov",
      "text",
      "cobertura"
    ],
    "coverageDirectory": "coverage",
    "globals": {},
    "setupFiles": [
      "<rootDir>config.ts"
    ]
  }
}
